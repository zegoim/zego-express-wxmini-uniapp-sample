{"version":3,"sources":["uni-app:///main.js","webpack:////Applications/project/uniapp-sample/pages/base_zego/base_zego.vue?636b","webpack:////Applications/project/uniapp-sample/pages/base_zego/base_zego.vue?50dd","webpack:////Applications/project/uniapp-sample/pages/base_zego/base_zego.vue?2739","webpack:////Applications/project/uniapp-sample/pages/base_zego/base_zego.vue?0999","uni-app:///pages/base_zego/base_zego.vue"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page"],"mappings":"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","file":"pages/base_zego/base_zego.js","sourcesContent":["import 'uni-pages';wx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/base_zego/base_zego.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./base_zego.vue?vue&type=template&id=c628a9ec&\"\nvar renderjs\nimport script from \"./base_zego.vue?vue&type=script&lang=js&\"\nexport * from \"./base_zego.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/base_zego/base_zego.vue\"\nexport default component.exports","export * from \"-!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./base_zego.vue?vue&type=template&id=c628a9ec&\"","var components\ntry {\n  components = {\n    zegoPusher: function() {\n      return import(\n        /* webpackChunkName: \"components/zego-pusher/zego-pusher\" */ \"@/components/zego-pusher/zego-pusher.vue\"\n      )\n    },\n    zegoPlayer: function() {\n      return import(\n        /* webpackChunkName: \"components/zego-player/zego-player\" */ \"@/components/zego-player/zego-player.vue\"\n      )\n    },\n    settingCameraRecord: function() {\n      return import(\n        /* webpackChunkName: \"components/setting-camera-record/setting-camera-record\" */ \"@/components/setting-camera-record/setting-camera-record.vue\"\n      )\n    }\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./base_zego.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./base_zego.vue?vue&type=script&lang=js&\"","<template>\n    <view class=\"page-content\">\n        <template v-if=\"canShow == 1\">\n            <view>\n                <view class=\"containerBase\">\n                    <zego-pusher id=\"zegoPusher\" :pusher=\"pusher\" />\n                    <zego-player v-for=\"item in zegoPlayerList\" :key=\"id\" :id=\"item.componentID\"\n                        :playerId=\"item.playerId\" :playerList=\"playerList\" />\n                </view>\n                <view class=\"index-container\">\n                    <view class='input-container'>\n                        <input v-model=\"roomID\" placeholder=\"请输入房间 ID\"\n                            placeholder-style='color: #b3b3b3; font-size: 14px;' class=\"room-input\" />\n                        <text class=\"tip\" />\n\n                    </view>\n                    <view class=\"button-container\">\n                        <button @tap=\"openRoom\" data-role=\"1\" data-option=\"videoAndAudio\" hover-class=\"none\"\n                            class=\"openRoom\">\n                            加入房间(推流)\n                        </button>\n                        <button @tap=\"openRoom\" data-role=\"0\" hover-class=\"none\" class=\"openRoom\">\n                            加入房间(不推流)\n                        </button>\n                        <button @tap=\"openRoom\" data-role=\"1\" data-option=\"audio\" hover-class=\"none\" class=\"openRoom\">\n                            加入房间(推纯音频)\n                        </button>\n                        <button @tap=\"openRoom\" data-role=\"1\" data-option=\"video\" hover-class=\"none\" class=\"openRoom\">\n                            加入房间(推纯视频)\n                        </button>\n                        <button @tap=\"pausePush\" data-role=\"1\" data-option=\"video\" hover-class=\"none\" class=\"openRoom\">\n                            暂停推流\n                        </button>\n                        <button @tap=\"resumePush\" data-role=\"1\" data-option=\"video\" hover-class=\"none\" class=\"openRoom\">\n                            恢复推流\n                        </button>\n                        <button class=\"logout-room\" @tap=\"logout\" hover-class=\"none\">退出房间</button>\n                    </view>\n                </view>\n            </view>\n        </template>\n        <setting-camera-record :canShow=\"canShow\" />\n    </view>\n</template>\n\n<script>\nimport {\n    getLoginToken\n} from '../../utils/server';\nimport {\n    initSDK,\n    authCheck,\n    startPush,\n} from '../../utils/common_zego';\nlet {\n    zegoAppID,\n    server\n} = getApp().globalData;\nlet zg\nexport default {\n    data() {\n        return {\n            roomID: '001',\n            pushStreamID: 'xcx-streamID-' + new Date().getTime(), // 推流ID\n            userID: 'xcx-userID-' + new Date().getTime(), // 用户ID,\n            livePlayerList: [],\n            connectType: -1, // -1为初始状态，1为连接，0断开连接\n            canShow: -1,\n            role: '',\n            roomUserList: [],\n            handupStop: false,\n            mirror: true,\n            num: 0,\n            livePlaying: [],\n            isReLoginging: false,\n            pusher: {},  // live-pusher的属性，sdk进行管理\n            playerList: [],  // live-player的属性列表，sdk进行管理\n            zegoPlayerList: [],  // 组件列表\n        }\n    },\n    async onReady() {\n        console.log('onReady')\n        zg = initSDK(this, \"pusher\", \"playerList\");\n        console.log(\"zg\", zg);\n        console.log('sdk version: ', zg.getVersion());\n    },\n    onShow() {\n        console.log('onShow: ', this.handupStop, this.connectType, server);\n        authCheck(this);\n        // 初始化 zego-player列表\n        this.zegoPlayerList = []\n        if (zg && this.roomID) {\n            // this.reLogin();\n        }\n        // 刷新全局变量\n        zegoAppID = getApp().globalData.zegoAppID;\n        server = getApp().globalData.server;\n\n    },\n    onHide() {\n        this.logout();\n    },\n    onUnload() {\n        this.logout();\n        uni.offNetworkStatusChange()\n    },\n    onLoad() {\n        // 监听网络状态\n        this.onNetworkStatus()\n    },\n    methods: {\n        async openRoom(e) {\n            console.log(this)\n            if (!this.roomID) {\n                uni.showModal({\n                    title: '提示',\n                    content: '请输入房间号',\n                    showCancel: false,\n                });\n                return;\n            }\n            if (this.connectType !== 1) {\n                console.log(this)\n                try {\n                    /** 获取token */\n                    const token = await getLoginToken(zegoAppID, this.userID);\n                    /** 开始登录房间 */\n                    let isLogin = await zg.loginRoom(this.roomID, token, {\n                        userID: this.userID,\n                        userName: 'nick' + this.userID\n                    }, {\n                        userUpdate: true\n                    });\n                    isLogin ? console.log('login success') : console.error('login fail');\n                    this.connectType = 1\n                    // zg.setCustomSignalUrl([`rtmp://120.77.40.218/zegostg/${this.pushStreamID}`]); //wss://webrtctest.zego.im/ws?a=webrtc-demo\n                } catch (error) {\n                    console.error('error: ', error);\n                    return;\n                }\n            }\n            // 创建房间，开始推流\n            if (e.target.dataset && e.target.dataset.role == 1) {\n                let config = { mode: \"SD\" };\n                if (e.target.dataset.option == \"video\") {\n                    config.enableMic = false;\n                } else if (e.target.dataset.option == \"audio\") {\n                    config.enableCamera = false;\n                }\n                this.config = config\n                // 将zg实例传递给组件。\n                const zegoPusher = this.selectComponent(\"#zegoPusher\").$vm || this.selectComponent(\"#zegoPusher\") \n                await zegoPusher.startPush (zg, this.pushStreamID, undefined, this.config);\n            }\n            this.role = e.target.dataset.role\n        },\n        async logout() {\n            try {\n                if (this.pusher && this.pusher.url) {\n                    zg.getPusherInstance().stop()\n                }\n\n                this.playerList && this.playerList.forEach(i => {\n                    zg.getPlayerInstance(i.id).stop()\n                })\n\n                this.setData({\n                    zegoPlayerList: []\n                })\n                /** 登出房间 */\n                if (zg && this.connectType === 1) await zg.logoutRoom();\n            } catch (error) {\n                console.error('error: ', error);\n            }\n\n        },\n        //  //切换拉流\n        async reLogin() {\n            console.error(\"重新登录\")\n\n            if (this.isReLoginging) return;\n            this.isReLoginging = true;\n            try {\n                await zg.logoutRoom();\n                // this.livePusher && (this.livePusher! as wx.LivePusherContext).stop();\n                let token = await getLoginToken(zegoAppID, this.userID);\n                if (!token) {\n                    console.error(\"获取token 失败\");\n                    this.reLogin();\n                    return\n                }\n                this.token = token\n                console.error('login ', this.userID, this.token, this.roomID, zegoAppID);\n                let isLogin = await zg.loginRoom(this.roomID, this.token, {\n                    userID: this.userID,\n                    userName: 'nick' + this.userID\n                });\n                isLogin ? console.log('login success') : console.error('login fail');\n                this.connectType = 1;\n                //console.log('pushStream: ', this.pushStreamID, this.livePusherUrl, this.role);\n                if (this.role == 1) {\n                    startPush(this.pushStreamID, undefined, this.config)\n                }\n                this.isReLoginging = false;\n\n            } catch (error) {\n                console.error('error: ', error);\n            }\n        },\n        // 停止推流\n        pausePush() {\n            zg.getPusherInstance().pause({\n                success: () => {\n                    console.warn(\" success\")\n                },\n                fail: (e) => {\n                    console.warn(\" fail \" + e)\n                },\n                complete: () => {\n                    console.warn(\"complete\")\n                }\n            })\n        },\n        onNetworkStatus() {\n            uni.onNetworkStatusChange(res => {\n                if (res.isConnected && this.connectType === 1 && zg) {\n                    console.warn('data', this.data);\n                    console.warn('roomID', this.roomID);\n                    this.reLogin();\n                }\n            })\n        },\n        resumePush() {\n            zg.getPusherInstance().resume({\n                success: () => {\n                    console.warn(\" success\")\n                },\n                fail: (e) => {\n                    console.warn(\" fail \" + e)\n                },\n                complete: () => {\n                    console.warn(\"complete\")\n                }\n            })\n        }\n    }\n}\n</script>\n\n<style>\n</style>"],"sourceRoot":""}