{"version":3,"sources":["uni-app:///main.js","webpack:////Applications/project/uniapp-sample/pages/message/message.vue?db50","webpack:////Applications/project/uniapp-sample/pages/message/message.vue?de52","webpack:////Applications/project/uniapp-sample/pages/message/message.vue?7294","webpack:////Applications/project/uniapp-sample/pages/message/message.vue?f8d9","uni-app:///pages/message/message.vue"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page"],"mappings":";;;;;;;;;;kDAAA;AACA;AACA,kG,6FAFmBA,EAAE,CAACC,iCAAH,GAAuCC,mBAAvC;AAGnBC,UAAU,CAACC,gBAAD,CAAV,C;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAoH;AACpH;AAC2D;AACL;;;AAGtD;AAC0L;AAC1L,gBAAgB,oMAAU;AAC1B,EAAE,6EAAM;AACR,EAAE,kFAAM;AACR,EAAE,2FAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,sFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAutB,CAAgB,ouBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACsD3uB;AACA,gE;;AAEA,mB,CAAA,S,sBAAA,S,CAAA,M,sBAAA,M;AACA,O;AACA;AACA,gCADA,EACA;AACA,MAFA,kBAEA;AACA;AACA,iBADA;AAEA,sBAFA;AAGA,qBAHA;;AAKA,GARA;AASA,SATA,qBASA;AACA;AACA;AACA;AACA,6BAJA,CAIA;AACA,yCALA;AAMA,GAfA;AAgBA,QAhBA,oBAgBA;AACA;AACA;AACA;AACA;AACA;AACA,kBANA,CAMA;AACA;AACA;AACA;AACA,GA1BA;AA2BA;AACA,WADA,qBACA;AACA,uBADA,GACA;AACA,0DADA;AAEA,qCAFA;AAGA;AACA,qDAJA;AAKA,yCALA,EADA;;AAQA;AACA;AACA,iDAVA;;AAYA,wEAZA,SAYA,MAZA;AAaA,6DAbA;;AAeA,kEAfA;AAgBA,iBAhBA;AAiBA,KAlBA;AAmBA,kBAnBA,4BAmBA;AACA,uBADA,GACA;AACA,0DADA;AAEA,qCAFA;AAGA;AACA,qDAJA;AAKA,yCALA,EADA;;AAQA;AACA;AACA,iDAVA;;AAYA,sEAZA,SAYA,MAZA;AAaA,oEAbA;;AAeA,yEAfA;AAgBA,iBAhBA;AAiBA,KApCA;AAqCA,qBArCA,+BAqCA;AACA;AACA,KAvCA;AAwCA,oBAxCA,8BAwCA;AACA;AACA,KA1CA;AA2CA,qBA3CA,+BA2CA;AACA;AACA,0BAFA,GAEA;AACA;AACA,iBAFA,CAFA;;AAMA,iFANA,SAMA,GANA;AAOA,2DAPA;;AASA,4DATA;;AAWA,KAtDA;AAuDA,gBAvDA,0BAuDA;AACA;AACA;AACA,iBAFA;AAGA;AACA;AACA,iBAFA;AAGA;;AAEA;AACA;AACA,mFADA;AAEA,uDAFA;AAGA;AACA,sDAJA;AAKA,2DALA;;AAOA;AACA;AACA,iBAZA;AAaA;;AAEA;AACA;AACA,uCADA;AAEA,2CAFA;AAGA,sDAHA;AAIA,gDAJA;;AAMA;AACA;AACA,iBAXA;AAYA;AACA;AACA,iBAFA;AAGA;;AAEA;AACA;AACA,mFADA;AAEA,uDAFA;AAGA;AACA,sDAJA;AAKA,2DALA;;AAOA;AACA;AACA,iBAZA;AAaA;AACA;AACA;AACA;AACA;AACA,mBAFA;AAGA;AACA,kCADA;AAEA,qCAFA;AAGA,qCAHA;;AAKA,iBAXA,EAhDA;;AA6DA,KApHA,EA3BA,E","file":"pages/message/message.js","sourcesContent":["import 'uni-pages';wx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/message/message.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./message.vue?vue&type=template&id=a91f51d4&\"\nvar renderjs\nimport script from \"./message.vue?vue&type=script&lang=js&\"\nexport * from \"./message.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/message/message.vue\"\nexport default component.exports","export * from \"-!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./message.vue?vue&type=template&id=a91f51d4&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./message.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./message.vue?vue&type=script&lang=js&\"","<template>\n    <view class=\"page-content\">\n        <view v-if=\"canShow == 1\">\n            <view class=\"containerBase\">\n                <live-pusher v-if=\"livePusherUrl\" :url=\"livePusherUrl\" aspect=\"3:4\" @statechange=\"onPushStateChange\"\n                    mode=\"RTC\" min-bitrate=\"1500\" @netstatus=\"onPushNetStateChange\"\n                    waiting-image=\"https://storage.zego.im/downloads/pause_publish.png\"></live-pusher>\n                <live-player v-for=\"item in livePlayerList\" :key=\"item.streamID\" :id=\"item.streamID\" :src=\"item.url\"\n                    min-cache=\"0.3\" max-cache=\"0.8\" mode=\"RTC\" autoplay @statechange=\"onPlayStateChange\"\n                    @netstatus=\"onPlayNetStateChange\"></live-player>\n            </view>\n            <scroll-view class=\"message-view\" scroll-y=\"true\" :scroll-into-view=\"scrollToView\">\n                <view class=\"message-item\" v-for=\"item in messageList\" :key=\"indeitem.ID\" :id=\"item.ID\">\n                    <view>\n                        <span>{{ item.name }}:</span>\n                        {{ item.content }}\n                    </view>\n                </view>\n            </scroll-view>\n            <view class=\"index-container\">\n                <view class='input-container'>\n                    <input v-model=\"roomID\" placeholder=\"请输入房间 ID\" placeholder-style='color: #b3b3b3; font-size: 14px;'\n                        class=\"room-input\" />\n                    <input v-model=\"message\" confirm-type='send' @confirm=\"sendMsg\" placeholder=\"说点什么吧～\"\n                        placeholder-style='color: #b3b3b3; font-size: 14px;' class=\"msg-input\" />\n                </view>\n                <view>\n\n                </view>\n                <view class=\"button-container\">\n                    <button @tap=\"openRoom\" data-role=\"1\" hover-class=\"none\" >\n                        加入房间(推流)\n                    </button>\n                    <button @tap=\"openRoom\" data-role=\"0\" hover-class=\"none\" >\n                        加入房间(不推流)\n                    </button>\n                    <button @tap=\"sendMsg\" hover-class=\"none\" >广播发送</button>\n                    <button @tap=\"sendBarrageMsg\" hover-class=\"none\" >弹幕发送</button>\n                    <button @tap=\"sendCustomCommand\" hover-class=\"none\" >指定发送</button>\n                    <button @tap=\"updateStreamExtra\" hover-class=\"none\" >更新信息</button>\n                    <button @tap=\"setRoomExtraInfo\" hover-class=\"none\" >发送可靠消息</button>\n                    <button @tap=\"logout\" hover-class=\"none\" class=\"logout-room\">退出房间</button>\n                </view>\n            </view>\n        </view>\n        <view class=\"settings\">\n            <button v-if=\"canShow == 0\" open-type=\"openSetting\" @opensetting=\"settingCallback\">\n                授权使用摄像头和麦克风\n            </button>\n        </view>\n    </view>\n</template>\n\n<script>\nimport commonMixin from '../../mixin/common-mixin'\nimport { initSDK, authCheck } from '../../utils/common';\n\nlet { zegoAppID, server } = getApp().globalData;\nlet zg;\nexport default {\n    mixins: [commonMixin], // 方法混合，包含登录房间，推拉流，退出房间\n    data() {\n        return {\n            message: '',\n            scrollToView: \"\",\n            messageList: [],\n        }\n    },\n    async onReady() {\n        zg = initSDK(this);\n        console.log(\"message sdk version: \", zg.getVersion());\n        console.log(zg);\n        this._zg = zg // _zg不监听，监听会报错\n        zg && this.bindCallback();\n    },\n    onShow() {\n        console.log('server: ', server);\n        authCheck(this);\n        if (zg && this.roomID) {\n            this.reLogin();\n        }\n        this._zg = zg // _zg不监听，监听会报错\n        // 刷新全局变量\n        zegoAppID = getApp().globalData.zegoAppID;\n        server = getApp().globalData.server;\n    },\n    methods: {\n        async sendMsg() {\n            let message = {\n                ID: this.userID + new Date().getTime(),\n                name: this.userID,\n                // @ts-ignore\n                time: new Date().format(\"hh:mm:ss\"),\n                content: this.message,\n            };\n            console.log('>>> currentMessage', this.message);\n            this.messageList = [...this.messageList, message]\n            this.scrollToView = message.ID\n            try {\n                const isSent = await zg.sendBroadcastMessage(this.roomID, this.message)\n                console.log('>>> sendMsg success, ', isSent);\n            } catch (error) {\n                console.log('>>> sendMsg, error: ', error);\n            };\n        },\n        async sendBarrageMsg() {\n            let message = {\n                ID: this.userID + new Date().getTime(),\n                name: this.userID,\n                // @ts-ignore\n                time: new Date().format(\"hh:mm:ss\"),\n                content: this.message,\n            };\n            console.log('>>> barrageMessage', this.message);\n            this.messageList = [...this.messageList, message]\n            this.scrollToView = message.ID\n            try {\n                const isSent = await zg.sendBarrageMessage(this.roomID, this.message)\n                console.log('>>> barrageMessage success, ', isSent);\n            } catch (error) {\n                console.log('>>> barrageMessage, error: ', error);\n            };\n        },\n        updateStreamExtra() {\n            zg.setStreamExtraInfo(this.pushStreamID, 'setStreamExtraInfo test, send at ' + new Date().toLocaleString())\n        },\n        setRoomExtraInfo() {\n            zg.setRoomExtraInfo(this.pushStreamID, '2', 'ReliableMessage test002')\n        },\n        async sendCustomCommand() {\n            console.error(this.roomUserList);\n            const toUserList = this.roomUserList.map(item => {\n                return item.userID\n            });\n            try {\n                const res = await zg.sendCustomCommand(this.roomID, this.message, toUserList);\n                console.warn('send custom success ' + res)\n            } catch (error) {\n                console.error(JSON.stringify(error))\n            }\n        },\n        async bindCallback() {\n            zg.on('playerStateUpdate', (result) => {\n                console.log('playStateUpdate', result);\n            });\n            zg.on('publisherStateUpdate', (result) => {\n                console.log('publishStateChange', result);\n            });\n            zg.on('IMRecvBroadcastMessage', (roomID, chatData) => {\n                \n                console.log('IMRecvBroadcastMessage', roomID, chatData);\n                let message = {\n                    ID: 'zego' + chatData[0].fromUser.userID + chatData[0].sendTime,\n                    name: chatData[0].fromUser.userName,\n                    // @ts-ignore\n                    time: format(chatData[0].sendTime),\n                    content: chatData[0].message + '(广播发送)'\n                }\n                this.messageList = [...this.messageList, message]\n                this.scrollToView = message.ID\n            });\n            zg.on('IMRecvCustomCommand', (roomID, fromUser, command) => {\n                \n                console.log('IMRecvCustomCommand', roomID, fromUser, command);\n                let message = {\n                    ID: fromUser.userID,\n                    name: fromUser.userName,\n                    time: format(new Date().getTime()),\n                    content: command + '(自定义发送)'\n                }\n                this.messageList = [...this.messageList, message]\n                this.scrollToView = message.ID\n            });\n            zg.on('roomExtraInfoUpdate', (roomID, roomExtraInfoList) => {\n                console.error('roomExtraInfoUpdate', roomID, roomExtraInfoList);\n            })\n            zg.on('IMRecvBarrageMessage', (roomID, chatData) => {\n                \n                console.log('IMRecvBroadcastMessage', roomID, chatData);\n                let message = {\n                    ID: 'zego' + chatData[0].fromUser.userID + chatData[0].sendTime,\n                    name: chatData[0].fromUser.userName,\n                    // @ts-ignore\n                    time: format(chatData[0].sendTime),\n                    content: chatData[0].message + '(弹幕发送)'\n                }\n                this.messageList = [...this.messageList, message]\n                this.scrollToView = message.ID\n            });\n            zg.on('streamExtraInfoUpdate', (roomID, streamList) => {\n                console.log('streamExtraInfoUpdate', roomID, streamList);\n                let _content = '';\n                streamList.forEach(item => {\n                    _content += `${item.user.userID} set stream ${item.streamID} extraInfo ${item.extraInfo} \\n`;\n                })\n                uni.showModal({\n                    title: '流附加消息',\n                    content: _content,\n                    showCancel: false,\n                })\n            });\n\n        },\n    }\n}\n</script>\n\n<style>\n</style>"],"sourceRoot":""}