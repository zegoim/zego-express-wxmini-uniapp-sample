import { ZegoDataReport, ZegoLogger } from "../../common/zego.entity";
import { StateCenter } from "../../common/stateCenter";
import { ZegoStreamCenterWechat } from "./zego.streamcenter.wechat";
import { PublishModule } from "./publish.module";
import { PlayModule } from "./play.module";
import { ENUM_DISPATCH_TYPE } from "../../common/zego.entity";
import { ZegoExpressWebRTM } from "zego-express-engine-webrtm/sdk/src";
export declare class WechatMiniModules {
    private logger;
    private dataReport;
    private stateCenter;
    private rtm;
    streamCenter: ZegoStreamCenterWechat;
    publishModule: PublishModule;
    playModule: PlayModule;
    currentPlaySourceType: ENUM_DISPATCH_TYPE;
    mixStreamList: {
        [index: string]: any;
    };
    ultraPlaySourceType: string;
    constructor(logger: ZegoLogger, dataReport: ZegoDataReport, stateCenter: StateCenter, rtm: ZegoExpressWebRTM);
    init(): void;
    private bindRTMListener;
    private bindStreamHandler;
    private bindStreamCenterHandler;
    private onPublishStateUpdateHandle;
    bindListener(listener: string, callBack: Function): boolean;
    deleteListener(listener: string, callBack?: Function): boolean;
    checkSystemRequirements(): Promise<{
        code: number;
        msg: string;
    }>;
    updatePlayerState(streamID: string, event: any): void;
    updatePlayerNetStatus(streamID: string, event: any): void;
    updateAudioVolumeNotify(streamID: string, event: any): void;
    getNextUrl(streamID: string): string;
    setCustomSignalUrl(signalUrl: Array<string>, isPublish?: boolean): false | undefined;
}
