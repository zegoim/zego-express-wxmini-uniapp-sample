import { ZegoDataReport, ZegoLogger } from "../../../common/zego.entity";
import { StateCenter } from "../../../common/stateCenter";
import { Constraints, webPublishOption, ZegoResponse, ZegoExpressWebRTM } from "../../../common/zego.entity";
import { ZegoStreamCenterWeb } from "../zego.streamCenter.web";
export declare class PublishModule {
    private logger;
    private dataReport;
    private stateCenter;
    private streamCenter;
    private rtm;
    constructor(logger: ZegoLogger, dataReport: ZegoDataReport, stateCenter: StateCenter, streamCenter: ZegoStreamCenterWeb, rtm: ZegoExpressWebRTM);
    createStream(option?: Constraints): Promise<MediaStream>;
    destroyStream(localStream: MediaStream): void;
    startPublishingStream(streamID: string, localStream: MediaStream, publishOption?: webPublishOption): boolean;
    activateSEIInsert(stream: MediaStream, action: 0 | 1, infoType?: number): boolean;
    stopPublishingStream(streamID: string): boolean;
    setCaptureVolume(localStream: MediaStream, volume: number): Promise<ZegoResponse>;
    private startScreenShotChrome;
    private startScreenSharing;
    private startScreenShotFirFox;
    private startPreview;
    private stopPreview;
    private recordDevices;
}
