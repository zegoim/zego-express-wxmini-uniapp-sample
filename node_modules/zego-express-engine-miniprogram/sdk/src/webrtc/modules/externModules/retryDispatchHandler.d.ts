import { RetryHandler } from "../../../util/retryHandler";
import { ZegoLogger } from "../../../common/zego.entity";
import { StateCenter } from "../../../common/stateCenter";
import { webPublishOption, webPlayOption, ZegoExpressWebRTM } from "../../../common/zego.entity";
import { ZegoStreamCenterWeb } from "../zego.streamCenter.web";
export declare class RetryDispatchHandler extends RetryHandler {
    logger: ZegoLogger;
    stateCenter: StateCenter;
    streamCenter: ZegoStreamCenterWeb;
    rtm: ZegoExpressWebRTM;
    isPublish: boolean;
    streamID: string;
    playOption: webPublishOption | webPlayOption;
    retryActiveCount: number;
    RETRY_MAX_TIME: number;
    constructor(logger: ZegoLogger, stateCenter: StateCenter, rtm: ZegoExpressWebRTM, streamCenter: ZegoStreamCenterWeb);
    initStream(streamID: string, playOption: webPublishOption | webPlayOption, isPublish: boolean): void;
    active(firstInterval?: number): boolean;
    startMaxTime(): void;
    stopMaxTime(): void;
    onactive(...args: Array<any>): void;
    private handleFetchWebRtcUrlRsp;
}
