export declare const ZegoRTCLogEvent: {
    kZegoTaskCreateStream: {
        event: string;
        error: {
            kBrowserNotSupportError: {
                code: number;
                message: string;
            };
            kParamError: {
                code: number;
                message: string;
            };
            kScreenCancelError: {
                code: number;
                message: string;
            };
            kScreenFailedError: {
                code: number;
                message: string;
            };
            kScreenNotSupportError: {
                code: number;
                message: string;
            };
            kHttpsRequiredError: {
                code: number;
                message: string;
            };
            kGetUserMediaError: {
                code: number;
                message: string;
            };
        };
        stream_type: (item: any) => any;
        screen: (item: any) => any;
        camera: (item: any) => any;
        custom: (item: any) => any;
    };
    kZegoTaskPublishStart: {
        event: string;
        error: {
            kPublishParamError: {
                code: number;
                message: string;
            };
            kPublishNetworkTimeoutError: {
                code: number;
                message: string;
            };
            kPublishDispatchTimeoutError: {
                code: number;
                message: string;
            };
            kPublishDispatchError: {
                code: number;
                message: string;
            };
            kPublishNetworkBrokenError: {
                code: number;
                message: string;
            };
            kPublishNoPreviewError: {
                code: number;
                message: string;
            };
            kPublishNoLoginError: {
                code: number;
                message: string;
            };
            kPublishRetryTimeoutError: {
                code: number;
                message: string;
            };
            kMediaServerForbidError: {
                code: number;
                message: string;
            };
            kPublishSessionClosedError: {
                code: number;
                message: string;
            };
            kPublishNegoTimeoutError: {
                code: number;
                message: string;
            };
            kCreateOfferError: {
                code: number;
                message: string;
            };
            kSetLocalDescError: {
                code: number;
                message: string;
            };
            kSessionTimeoutError: {
                code: number;
                message: string;
            };
            kSessionRequestError: {
                code: number;
                message: string;
            };
            kSetRemoteDescError: {
                code: number;
                message: string;
            };
            kMediaConnectionError: {
                code: number;
                message: string;
            };
            kWebsocketDisconnectedError: {
                code: number;
                message: string;
            };
            kMediaDescError: {
                code: number;
                message: string;
            };
            kCandidateError: {
                code: number;
                message: string;
            };
            kIsPublishing: {
                code: number;
                message: string;
            };
            kClientIPChangedError: {
                code: number;
                message: string;
            };
            kTTLOverTimeError: {
                code: number;
                message: string;
            };
        };
        publishOption: (item: any) => any;
        message: (item: any) => any;
        session_id: (item: any) => any;
        stream: (item: any) => any;
        video_en_codec_id: (item: any) => any;
        cap_w: (item: any) => any;
        cap_h: (item: any) => any;
        w: (item: any) => any;
        h: (item: any) => any;
        video_en_fps: (item: any) => any;
        video_en_bps: (item: any) => any;
        audio_c_channel_count: (item: any) => any;
        audio_en_bps: (item: any) => any;
        aec_level: (item: any) => any;
        ans_level: (item: any) => any;
        agc: (item: any) => any;
        traffic_control_min_video_bitrate: (item: any) => any;
    };
    kZegoTaskVideoCaptureSize: {
        event: string;
        session_id: (item: any) => any;
        w: (item: any) => any;
        h: (item: any) => any;
    };
    kZegoTaskVideoPlaySize: {
        event: string;
        session_id: (item: any) => any;
        w: (item: any) => any;
        h: (item: any) => any;
    };
    kZegoTaskRePublish: {
        event: string;
        stream: (item: any) => any;
    };
    kZegoTaskPublishStop: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
        };
        stream: (item: any) => any;
    };
    kZegoTaskPlayStart: {
        event: string;
        error: {
            kStreamIDNullError: {
                code: number;
                message: string;
            };
            kPlayParamError: {
                code: number;
                message: string;
            };
            kPlayStreamIDToLongError: {
                code: number;
                message: string;
            };
            kPlayStreamIDInvalidCharacterError: {
                code: number;
                message: string;
            };
            kPlayNoLoginError: {
                code: number;
                message: string;
            };
            kPlayRepeatedPullError: {
                code: number;
                message: string;
            };
            kPlayNetworkTimeoutError: {
                code: number;
                message: string;
            };
            kPlayDispatchTimeoutError: {
                code: number;
                message: string;
            };
            kPlayDispatchError: {
                code: number;
                message: string;
            };
            kPlayNetworkBrokenError: {
                code: number;
                message: string;
            };
            kPlayUnsupportedResourceMode: {
                code: number;
                message: string;
            };
            kPlayRetryTimeoutError: {
                code: number;
                message: string;
            };
            kPlaySessionClosedError: {
                code: number;
                message: string;
            };
            kPlaySessionResetError: {
                code: number;
                message: string;
            };
            kPlayNegoTimeoutError: {
                code: number;
                message: string;
            };
            kCreateOfferError: {
                code: number;
                message: string;
            };
            kSetLocalDescError: {
                code: number;
                message: string;
            };
            kSessionRequestError: {
                code: number;
                message: string;
            };
            kSessionTimeoutError: {
                code: number;
                message: string;
            };
            kSetRemoteDescError: {
                code: number;
                message: string;
            };
            kMediaConnectionError: {
                code: number;
                message: string;
            };
            kWebsocketDisconnectedError: {
                code: number;
                message: string;
            };
            kCandidateError: {
                code: number;
                message: string;
            };
            kMediaDescError: {
                code: number;
                message: string;
            };
            kIsPlaying: {
                code: number;
                message: string;
            };
            kClientIPChangedError: {
                code: number;
                message: string;
            };
            kTTLOverTimeError: {
                code: number;
                message: string;
            };
            kProbeTimeOutError: {
                code: number;
                message: string;
            };
        };
        playOption: (item: any) => any;
        message: (item: any) => any;
        session_id: (item: any) => any;
        stream: (item: any) => any;
        audio_activate: (item: any) => any;
        video_activate: (item: any) => any;
    };
    kZegoTaskRePlay: {
        event: string;
        stream: (item: any) => any;
    };
    kZegoTaskPlayStop: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
        };
        stream: (item: any) => any;
    };
    kZegoPlayContentChanged: {
        event: string;
        session_id: (item: any) => any;
        video_activate: (item: any) => any;
        audio_activate: (item: any) => any;
    };
    kZegoTaskMixStart: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
            kTaskIDNullError: {
                code: number;
                message: string;
            };
            kTaskIDToLongError: {
                code: number;
                message: string;
            };
            kTaskIDInvalidCharacterError: {
                code: number;
                message: string;
            };
            kInputListNullError: {
                code: number;
                message: string;
            };
            kOutputListNullError: {
                code: number;
                message: string;
            };
            kOutputTargetInvalidError: {
                code: number;
                message: string;
            };
            kOutputNoTargetError: {
                code: number;
                message: string;
            };
            kRequestError: {
                code: number;
                message: string;
            };
            kInternalError: {
                code: number;
                message: string;
            };
            kNoLoginError: {
                code: number;
                message: string;
            };
        };
        mix_stream_id: (item: any) => any;
        stream_cnt: (item: any) => any;
        input_stream_list: (item: any) => any;
        output_target_list: (item: any) => any;
    };
    kZegoTaskMixStop: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
            kTaskIDNullError: {
                code: number;
                message: string;
            };
            kRequestError: {
                code: number;
                message: string;
            };
            kInternalError: {
                code: number;
                message: string;
            };
            kNoLoginError: {
                code: number;
                message: string;
            };
        };
    };
    kZegoTaskMixConfig: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
            kVideoConfigInvalidError: {
                code: number;
                message: string;
            };
            kBackgroundImageUrlInvalidError: {
                code: number;
                message: string;
            };
            kNoLoginError: {
                code: number;
                message: string;
            };
        };
        config: (item: any) => any;
    };
    kZegoTaskEnumDevices: {
        event: string;
        error: {
            kBrowserNotSupportError: {
                code: number;
                message: string;
            };
            kEnumDevicesError: {
                code: number;
                message: string;
            };
        };
        dev_list: (item: any) => any;
    };
    kZegoTaskAudioOutput: {
        event: string;
        error: {
            kBrowserNotSupportError: {
                code: number;
                message: string;
            };
            kEnumDevicesError: {
                code: number;
                message: string;
            };
        };
        session_id: (item: any) => any;
        device: (item: any) => any;
    };
    kZegoTaskVideoCapture: {
        event: string;
        error: {
            kBrowserNotSupportError: {
                code: number;
                message: string;
            };
            kEnumDevicesError: {
                code: number;
                message: string;
            };
        };
        session_id: (item: any) => any;
        device: (item: any) => any;
    };
    kZegoTaskDeviceInterrupt: {
        event: string;
        error: {
            kBrowserNotSupportError: {
                code: number;
                message: string;
            };
            kEnumDevicesError: {
                code: number;
                message: string;
            };
        };
        session_id: (item: any) => any;
        interrupt: (item: any) => any;
    };
    kZegoTaskSetDebug: string;
    kZegoTaskSetLog: string;
    kZegoTaskUseVideoDevice: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
            kDevicesNoFoundError: {
                code: number;
                message: string;
            };
            kLocalStreamError: {
                code: number;
                message: string;
            };
        };
        device: (item: any) => any;
    };
    kZegoTaskUseAudioDevice: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
            kDevicesNoFoundError: {
                code: number;
                message: string;
            };
            kLocalStreamError: {
                code: number;
                message: string;
            };
        };
        device: (item: any) => any;
    };
    kZegoTaskCheckSystemRequirements: {
        event: string;
        capability: (item: any) => any;
    };
    kZegoTaskMutePublishVideo: string;
    kZegoTaskMutePublishAudio: string;
    kZegoTaskMuteMicrophone: string;
    kZegoTaskMutePlayVideo: string;
    kZegoTaskMutePlayAudio: string;
    kZegoTaskRemoteCameraUpdate: {
        event: string;
        stream: (item: any) => any;
        status: (item: any) => any;
    };
    kZegoTaskRemoteMicUpdate: {
        event: string;
        stream: (item: any) => any;
        status: (item: any) => any;
    };
    kZegoTaskGetSoundLevel: {
        event: string;
        error: {
            kGetSoundLevelError: {
                code: number;
                message: string;
            };
        };
    };
    kZegoTaskStopSoundLevel: string;
    kZegoTaskAddPublishCdnUrl: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
        };
    };
    kZegoTaskRemovePublishCdnUrl: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
        };
        stream: (item: any) => any;
        target_url: (item: any) => any;
    };
    kZegoTaskClearPublishCdnUrl: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
        };
    };
    kZegoTaskPublishTarget: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
            kPublishStreamNoFoundError: {
                code: number;
                message: string;
            };
            kNoLoginError: {
                code: number;
                message: string;
            };
            kNoResponseError: {
                code: number;
                message: string;
            };
            kBizChannelError: {
                code: number;
                message: string;
            };
            kInvalidChannelError: {
                code: number;
                message: string;
            };
            kUnknownServerError: {
                code: number;
                message: string;
            };
        };
    };
    kZegoTaskDestroyStream: {
        event: string;
        error: {
            kLocalStreamError: {
                code: number;
                message: string;
            };
        };
    };
    kZegoTaskScreenSharingEnded: string;
    kZegoTaskAudioOutputChanged: {
        event: string;
        session_id: (item: any) => any;
        stream: (item: any) => any;
        device: (item: any) => any;
        reason: (item: any) => any;
    };
    kZegoEventPublishStat: string;
    kZegoEventPlayStat: string;
    kZegoSetAudioConfig: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
        };
    };
    kZegoSetVideoConfig: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
            kLocalStreamError: {
                code: number;
                message: string;
            };
        };
    };
    kZegoReplaceTrack: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
        };
    };
    kZegoTaskLiveRoomGetStreamUpdateInfo: {
        event: string;
        stream_update_type: (item: any) => any;
        update_stream: (item: any) => any;
    };
    kZegoTaskLiveRoomGetStreamExtraInfo: {
        event: string;
        update_stream: (item: any) => any;
    };
    kZegoTaskLiveRoomSendStreamExtraInfo: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
            kExtraInfoNullError: {
                code: number;
                message: string;
            };
            kNoLoginError: {
                code: number;
                message: string;
            };
            kPublishStreamNoFoundError: {
                code: number;
                message: string;
            };
            kUpdateStreamInfoFailError: {
                code: number;
                message: string;
            };
        };
        stream: (item: any) => any;
        stream_extra_info: (item: any) => any;
        room_sid: (item: any) => any;
    };
    kZegoTaskPlayDecodeFirstVideoFrame: {
        event: string;
        session_id: (item: any) => any;
        fft_consumed: (item: any) => any;
    };
    kZegoVisibilityChange: {
        event: string;
    };
    kZegoSetCaptureVolume: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
        };
    };
    kZegoListener: {
        event: string;
    };
    kZegoNetProbe: {
        event: string;
    };
    kZegoNetProbeResult: {
        event: string;
    };
};
export declare const ZegoWechatLogEvent: {
    kZegoTaskCheckSystemRequirements: {
        event: string;
        error: {
            kCheckSystemGetSettingFailError: {
                code: number;
                message: string;
            };
        };
        capability: (item: any) => any;
    };
    kZegoTaskPublishStart: {
        event: string;
        error: {
            kPublishStreamIDNullError: {
                code: number;
                message: string;
            };
            kPublishParamError: {
                code: number;
                message: string;
            };
            kPublishStreamIDTooLongError: {
                code: number;
                message: string;
            };
            kPublishStreamIDInvalidCharacterError: {
                code: number;
                message: string;
            };
            kPublishNetworkTimeoutError: {
                code: number;
                message: string;
            };
            kPublishDispatchTimeoutError: {
                code: number;
                message: string;
            };
            kPublishDispatchError: {
                code: number;
                message: string;
            };
            kPublishNetworkBrokenError: {
                code: number;
                message: string;
            };
            kPublishNoLoginError: {
                code: number;
                message: string;
            };
            kPublishRetryTimeoutError: {
                code: number;
                message: string;
            };
            kIsPublishing: {
                code: number;
                message: string;
            };
        };
        publishOption: (item: any) => any;
        stream: (item: any) => any;
        message: (item: any) => any;
    };
    kZegoTaskPlayStart: {
        event: string;
        error: {
            kPlayStreamIDNullError: {
                code: number;
                message: string;
            };
            kPlayParamError: {
                code: number;
                message: string;
            };
            kPlayStreamIDTooLongError: {
                code: number;
                message: string;
            };
            kPlayStreamIDInvalidCharacterError: {
                code: number;
                message: string;
            };
            kPlayNoLoginError: {
                code: number;
                message: string;
            };
            kPlayRepeatedPullError: {
                code: number;
                message: string;
            };
            kPlayNetworkTimeoutError: {
                code: number;
                message: string;
            };
            kPlayDispatchTimeoutError: {
                code: number;
                message: string;
            };
            kPlayDispatchError: {
                code: number;
                message: string;
            };
            kPlayNetworkBrokenError: {
                code: number;
                message: string;
            };
            kPlayRetryTimeoutError: {
                code: number;
                message: string;
            };
            kIsPlaying: {
                code: number;
                message: string;
            };
            kPlayFailed: {
                code: number;
                message: string;
            };
        };
        playOption: (item: any) => any;
        message: (item: any) => any;
        session_id: (item: any) => any;
        stream: (item: any) => any;
        audio_activate: (item: any) => any;
        video_activate: (item: any) => any;
    };
    kZegoEventPublishStat: string;
    kZegoEventPlayStat: string;
    kZegoTaskRePublish: string;
    kZegoTaskRePlay: string;
    kZegoTaskPublishStop: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
        };
        stream: (item: any) => any;
    };
    kZegoTaskPlayStop: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
        };
        stream: (item: any) => any;
    };
    kZegoTaskLiveRoomGetStreamUpdateInfo: {
        event: string;
        stream_update_type: (item: any) => any;
        update_stream: (item: any) => any;
    };
    kZegoTaskLiveRoomGetStreamExtraInfo: {
        event: string;
        update_stream: (item: any) => any;
    };
    kZegoTaskMixStart: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
            kTaskIDNullError: {
                code: number;
                message: string;
            };
            kTaskIDToLongError: {
                code: number;
                message: string;
            };
            kTaskIDInvalidCharacterError: {
                code: number;
                message: string;
            };
            kInputListNullError: {
                code: number;
                message: string;
            };
            kOutputListNullError: {
                code: number;
                message: string;
            };
            kOutputTargetInvalidError: {
                code: number;
                message: string;
            };
            kOutputNoTargetError: {
                code: number;
                message: string;
            };
            kRequestError: {
                code: number;
                message: string;
            };
            kInternalError: {
                code: number;
                message: string;
            };
        };
        mix_stream_id: (item: any) => any;
        stream_cnt: (item: any) => any;
        input_stream_list: (item: any) => any;
        output_target_list: (item: any) => any;
    };
    kZegoTaskMixStop: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
            kTaskIDNullError: {
                code: number;
                message: string;
            };
            kRequestError: {
                code: number;
                message: string;
            };
            kInternalError: {
                code: number;
                message: string;
            };
        };
    };
    kZegoTaskMixConfig: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
            kVideoConfigInvalidError: {
                code: number;
                message: string;
            };
            kBackgroundImageUrlInvalidError: {
                code: number;
                message: string;
            };
        };
        config: (item: any) => any;
    };
    kZegoTaskLiveRoomSendStreamExtraInfo: {
        event: string;
        error: {
            kParamError: {
                code: number;
                message: string;
            };
            kExtraInfoNullError: {
                code: number;
                message: string;
            };
            kNoLoginError: {
                code: number;
                message: string;
            };
            kPublishStreamNoFoundError: {
                code: number;
                message: string;
            };
            kUpdateStreamInfoFailError: {
                code: number;
                message: string;
            };
        };
        stream: (item: any) => any;
        stream_extra_info: (item: any) => any;
        room_sid: (item: any) => any;
    };
};
